{"ast":null,"code":"import _defineProperty from \"G:\\\\Keeper_Project_React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\Keeper_Project_React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"G:\\\\Keeper_Project_React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\Keeper_Project_React\\\\src\\\\components\\\\CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CreateArea(props) {\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFold = _useState4[0],\n      unFold = _useState4[1];\n\n  function setFold() {\n    unFold(true);\n  }\n\n  function updateText(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    placeholder: \"Title\",\n    value: note.title,\n    onChange: updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: updateText,\n    name: \"content\",\n    placeholder: \"Take a note...\",\n    rows: isFold ? \"1\" : \"3\",\n    value: note.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["G:/Keeper_Project_React/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","isFold","unFold","setFold","updateText","event","target","name","value","prev","submitNote","onAdd","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACtB,kBAAoBL,QAAQ,CAAC;AACzBM,IAAAA,KAAK,EAAC,EADmB;AAEzBC,IAAAA,OAAO,EAAC;AAFiB,GAAD,CAA5B;AAAA;AAAA,MAAMC,IAAN;AAAA,MAAWC,OAAX;;AAKA,mBAAqBT,QAAQ,CAAC,KAAD,CAA7B;AAAA;AAAA,MAAMU,MAAN;AAAA,MAAaC,MAAb;;AAEA,WAASC,OAAT,GAAkB;AACdD,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH;;AAED,WAASE,UAAT,CAAoBC,KAApB,EAA0B;AACtB,wBAAqBA,KAAK,CAACC,MAA3B;AAAA,QAAOC,IAAP,iBAAOA,IAAP;AAAA,QAAYC,KAAZ,iBAAYA,KAAZ;AACAR,IAAAA,OAAO,CAAC,UAAAS,IAAI,EAAE;AACV,6CACOA,IADP,2BAEKF,IAFL,EAEWC,KAFX;AAIH,KALM,CAAP;AAMH;;AAED,WAASE,UAAT,CAAoBL,KAApB,EAA0B;AACtBT,IAAAA,KAAK,CAACe,KAAN,CAAYZ,IAAZ;AACAC,IAAAA,OAAO,CACH;AACIH,MAAAA,KAAK,EAAC,EADV;AAEIC,MAAAA,OAAO,EAAC;AAFZ,KADG,CAAP;AAMAO,IAAAA,KAAK,CAACO,cAAN;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,WAAW,EAAC,OAFZ;AAGA,IAAA,KAAK,EAAEb,IAAI,CAACF,KAHZ;AAIA,IAAA,QAAQ,EAAEO,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACA,IAAA,QAAQ,EAAEA,UADV;AAEA,IAAA,IAAI,EAAC,SAFL;AAGA,IAAA,WAAW,EAAC,gBAHZ;AAIA,IAAA,IAAI,EAAEH,MAAM,GAAC,GAAD,GAAK,GAJjB;AAKA,IAAA,KAAK,EAAEF,IAAI,CAACD,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEY,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CAdF,CADF,CADJ;AAwBH;;AAED,eAAef,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props){\r\n    const[note,setNote]=useState({\r\n        title:\"\",\r\n        content:\"\"\r\n    });\r\n\r\n    const[isFold,unFold]=useState(false);\r\n\r\n    function setFold(){\r\n        unFold(true);\r\n    }\r\n    \r\n    function updateText(event){\r\n        const {name,value} = event.target;\r\n        setNote(prev=>{\r\n            return {\r\n                ...prev,\r\n                [name]:value\r\n            };\r\n        });\r\n    }\r\n\r\n    function submitNote(event){\r\n        props.onAdd(note);\r\n        setNote(\r\n            {\r\n                title:\"\",\r\n                content:\"\"\r\n            }\r\n        );\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n          <form className=\"create-note\">\r\n            <input \r\n            name=\"title\" \r\n            placeholder=\"Title\" \r\n            value={note.title} \r\n            onChange={updateText}    \r\n            />\r\n            <textarea \r\n            onChange={updateText}\r\n            name=\"content\" \r\n            placeholder=\"Take a note...\" \r\n            rows={isFold?\"1\":\"3\"}\r\n            value={note.content}    \r\n            />\r\n            <Zoom in={true}>\r\n            <Fab onClick={submitNote}>\r\n                <AddIcon/>\r\n            </Fab>\r\n            </Zoom>\r\n          </form>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default CreateArea;"]},"metadata":{},"sourceType":"module"}